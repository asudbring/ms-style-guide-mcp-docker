upstream mcp_backend {
    least_conn;
    server mcp-server:8000 max_fails=3 fail_timeout=30s;
}

server {
    listen 443 ssl http2;
    server_name localhost;

    # SSL certificates
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    # Additional SSL configuration
    # ssl_dhparam /etc/nginx/ssl/dhparam.pem;  # Commented out for development

    # Logging
    access_log /var/log/nginx/mcp-access.log main;
    error_log /var/log/nginx/mcp-error.log warn;

    # Root location
    location / {
        return 404;
    }

    # Health check endpoint (direct proxy)
    location /health {
        proxy_pass http://mcp_backend/health;
        proxy_set_header Host $host;
        access_log off;
    }

    # MCP initialization endpoint
    location /mcp/initialize {
        proxy_pass http://mcp_backend/mcp/initialize;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Methods "POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Mcp-Session-Id" always;
    }

    # Main MCP endpoint
    location /mcp {
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, Mcp-Session-Id" always;
            add_header Access-Control-Max-Age 3600;
            return 204;
        }

        proxy_pass http://mcp_backend/mcp;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Pass through MCP headers
        proxy_pass_header Mcp-Session-Id;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Buffering
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # SSE endpoint for streaming
    location /mcp/events {
        proxy_pass http://mcp_backend/mcp/events;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # SSE specific settings
        proxy_set_header Connection '';
        proxy_cache off;
        proxy_buffering off;
        chunked_transfer_encoding off;
        proxy_read_timeout 86400s;
        
        # Disable nginx buffering for SSE
        add_header X-Accel-Buffering no;
        add_header Cache-Control no-cache;
    }

    # Error pages
    error_page 404 /404.json;
    location = /404.json {
        default_type application/json;
        return 404 '{"error": "Not Found"}';
    }

    error_page 500 502 503 504 /50x.json;
    location = /50x.json {
        default_type application/json;
        return 500 '{"error": "Internal Server Error"}';
    }
}