# Multi-stage build for production
FROM python:3.11-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Create build directory
WORKDIR /build

# Copy requirements first for layer caching
COPY src/requirements.txt .

# Install Python dependencies
RUN pip install --user --no-cache-dir -r requirements.txt

# Production stage
FROM python:3.11-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy Python packages from builder
COPY --from=builder /root/.local /root/.local

# Create non-root user
RUN useradd -m -u 1000 mcpuser

# Copy the packages to mcpuser's home and fix permissions
RUN cp -r /root/.local /home/mcpuser/ && \
    chown -R mcpuser:mcpuser /home/mcpuser/.local && \
    chmod +x /home/mcpuser/.local/bin/*

# Set working directory
WORKDIR /app

# Copy application code
COPY --chown=mcpuser:mcpuser src/ .

# Switch to non-root user
USER mcpuser

# Make sure scripts are in PATH
ENV PATH=/home/mcpuser/.local/bin:$PATH

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Run with production server
CMD ["uvicorn", "mcp_http_server:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]